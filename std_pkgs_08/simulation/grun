#! /usr/bin/tclsh

#puts $argv
if {$argv == ""} {
    puts "Input field required:"
    puts "    numeric_bit      run tests numeric_bit.tlst"
    puts "    numeric_std      run tests numeric_std.tlst"
    puts "    std_logic_1164   run tests std1164.tlst"
    exit
}



###  get list of test directories
#set dirs_lst [glob -type d ../nbit* ]
#set stdll64_lst [glob -type d ../std1164* ]
#set num_std_lst [glob -type d ../num*]
#
###  here is where I am running from
set here [pwd]
set nflst $here/not_ieee08.flst
set log_dir "$here/logs"


## output the list found
#set tlh [open "test_list.txt" "w"]
#foreach d $dirs_lst {
#    puts $tlh $d
#}
#foreach d $num_std_lst {
#    puts $tlh $d
#}
#foreach d $stdll64_lst {
#    puts $tlh $d
#}
#close $tlh

set lst_fn "std1164.tlst"

if {$argv == "numeric_bit"} {
    set lst_fn "numeric_bit.tlst"
} elseif {$argv == "numeric_std"} {
    set lst_fn "numeric_std.tlst"
}

##  get list from file.
set lfh [open "$lst_fn" "r"]
set test_list [list]
while {![eof $lfh]} {
    set t [gets $lfh]
    if {$t == ""} {continue}
    set test_list [lappend test_list $t]
}

##  deal with log files directory
set is_logs [file isdirectory "logs"]
puts $is_logs
if {$is_logs == 1} {
    puts "Deleting log files ..."
    set llst [glob -nocomplain $log_dir/*.log]
    foreach f $llst {
        file delete -force $f
    }
} else {
    file mkdir "logs"
}



#foreach d $dirs_lst {
#foreach d $stdll64_lst {
foreach d $test_list {
    
    puts $d
    #  get the name with out leading ../
    set name [lindex [split $d "/"] end]
    # create log file name for  compile
    set fn "$log_dir/$name.log"
    set lfh [open "$fn" "w"]
    
    # to the test dir
    cd $d
    
    ##  crude runner
    exec rm -f work-obj08.cf
    #puts "analize not_ieee ..."
    catch {exec ghdl -a --std=08 --work=not_ieee @$nflst}  results options
    #  some tests have a package
    if {[file exists "not_test_pkg.vhdl"] == 1} {
        catch {exec ghdl -a --std=08 -frelaxed -Pnot_ieee not_test_pkg.vhdl} results options
    }
    #puts "analize test ..."
    catch {exec ghdl -a --std=08 -frelaxed -Pnot_ieee test.vhdl} results options
    puts $lfh $results
    #puts "run test ..."
    catch {exec ghdl -r --std=08 -frelaxed test  > actual_ghdl} results options
    exec rm -f work-obj08.cf
    #  some tests have a package
    if {[file exists "test_pkg.vhdl"] == 1} {
        catch {exec ghdl -a --std=08 -frelaxed test_pkg.vhdl} results options
    }
    #puts "analize std_test ..."
    catch {exec ghdl -a --std=08 -frelaxed std_test.vhdl} results options
    puts $lfh $results
    #puts "run std_test ..."
    catch {exec ghdl -r --std=08 -frelaxed test  >> actual_ghdl} results options
    # close log file
    
    catch {exec diff expect_ghdl actual_ghdl} results options
    if {$results != ""} {
        puts "Test results:  '$results'"
        puts $lfh $results
    } else {
        puts "$name Test Passed"
        puts $lfh $results
    }
    close $lfh
    # go home
    cd $here
    
}
